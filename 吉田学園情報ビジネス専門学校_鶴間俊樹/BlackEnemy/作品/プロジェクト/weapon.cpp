//=============================================================================
//
// 武器の処理 [weapon.cpp]
// Author : 鶴間俊樹
//
//=============================================================================
#include "weapon.h"

//=============================================================================
// 静的メンバ変数宣言
//=============================================================================

//=============================================================================
// デフォルトコンストラクタ
//=============================================================================
CWeapon::CWeapon()
{

}

//=============================================================================
//オーバーロードされたコンストラクタ
//=============================================================================
CWeapon::CWeapon(CModel::MODELTYPE typeModel, D3DXVECTOR3 pos, D3DXVECTOR3 rot, CModel* pParent, bool bOutLine) : CSceneModel(typeModel, pos, rot, pParent, bOutLine)
{
	SetDrawPriority(DRAW_PRIORITY::CHARA);	//描画順の設定　プレイヤー以後に描画を行わないと先に親モデルのマトリックスが計算できないため
}

//=============================================================================
// デストラクタ
//=============================================================================
CWeapon::~CWeapon()
{

}

//=============================================================================
// 武器の初期化処理
//=============================================================================
HRESULT CWeapon::Init(void) {
	CSceneModel::Init();
	return S_OK;
}

//=============================================================================
// 武器の終了処理
//=============================================================================
void CWeapon::Uninit(void) {
	CSceneModel::Uninit();
}

//=============================================================================
// 武器の更新処理
//=============================================================================
void CWeapon::Update(void) {
	CSceneModel::Update();
}

//=============================================================================
// 武器の描画処理
//=============================================================================
void CWeapon::Draw(void) {
	CSceneModel::Draw();
}

//=============================================================================
// 武器の攻撃中かどうかの設定
//=============================================================================
void CWeapon::SetAttack(bool bAttack) {
	m_bAttack = bAttack;
}

//=============================================================================
// 武器の攻撃中かどうかの取得
//=============================================================================
bool CWeapon::GetAttack(void) {
	return m_bAttack;
}

void CWeapon::SetDrawOutline(bool bDraw) {}	//モデルの輪郭の表示設定