//=============================================================================
//
// 赤林檎処理 [apple_red.cpp]
// Author : 鶴間俊樹
//
//=============================================================================
#include "apple_red.h"
#include "appleTree.h"

//=============================================================================
// 静的メンバ変数宣言
//=============================================================================

//=============================================================================
// デフォルトコンストラクタ
//=============================================================================
CAppleRed::CAppleRed()
{

}

//=============================================================================
// オーバーロードされたコンストラクタ
//=============================================================================
CAppleRed::CAppleRed(D3DXVECTOR3 pos, CAppleTree* pTree) : CGlowApple(pos, pTree)
{

}

//=============================================================================
// デストラクタ
//=============================================================================
CAppleRed::~CAppleRed()
{

}

//=============================================================================
// 赤林檎の生成処理
//=============================================================================
CAppleRed* CAppleRed::Create(D3DXVECTOR3 pos, CAppleTree* pTree) {
	CAppleRed* pAppleRed;
	pAppleRed = new CAppleRed(pos, pTree);
	if (pAppleRed == nullptr) return nullptr;

	pAppleRed->Init();

	//林檎の木の体力の上限値を上げる
	CAppleTree* pAppleTree = pAppleRed->GetAppleTree();
	if (pAppleTree != nullptr) {
		pAppleTree->AddMaxLife(100);
	}

	return pAppleRed;
}

//=============================================================================
// 赤林檎の初期化処理
//=============================================================================
HRESULT CAppleRed::Init(void) {
	CModel* pModelApple = GetPtrModel();
	//モデルの色を変更
	if (pModelApple != nullptr) {
		pModelApple->SetMaterialDiffuse(GetAppleColor(APPLE_TYPE::RED), 0);
	}

	CGlowApple::Init();
	return S_OK;
}

//=============================================================================
// 赤林檎の終了処理
//=============================================================================
void CAppleRed::Uninit(void) {
	CGlowApple::Uninit();
}

//=============================================================================
// 赤林檎の更新処理
//=============================================================================
void CAppleRed::Update(void) {
	CGlowApple::Update();
}

//=============================================================================
// 赤林檎の描画処理
//=============================================================================
void CAppleRed::Draw(void) {
	CGlowApple::Draw();
}