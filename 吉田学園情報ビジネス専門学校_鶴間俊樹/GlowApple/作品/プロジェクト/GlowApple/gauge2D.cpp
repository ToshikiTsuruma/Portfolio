//=============================================================================
//
// 2Dゲージ処理 [gauge2D.cpp]
// Author : 鶴間俊樹
//
//=============================================================================
#include "gauge2D.h"
#include "object2D.h"

//=============================================================================
// マクロ定義
//=============================================================================

//=============================================================================
// 静的メンバ変数宣言
//=============================================================================

//=============================================================================
// デフォルトコンストラクタ
//=============================================================================
CGauge2D::CGauge2D()
{

}

//=============================================================================
// オーバーロードされたコンストラクタ
//=============================================================================
CGauge2D::CGauge2D(int nMaxValue, int nValue, int nDrawLifeMax) : CGauge(nMaxValue, nValue, nDrawLifeMax)
{

}

//=============================================================================
// デストラクタ
//=============================================================================
CGauge2D::~CGauge2D()
{

}

//=============================================================================
// 2Dゲージの生成処理
//=============================================================================
CGauge2D* CGauge2D::Create(int nMaxValue, int nValue, int nDrawLifeMax) {
	CGauge2D* pGauge2D;
	pGauge2D = new CGauge2D(nMaxValue, nValue, nDrawLifeMax);
	if (pGauge2D == nullptr) return nullptr;

	pGauge2D->Init();

	return pGauge2D;
}

//=============================================================================
// 2Dゲージの初期化処理
//=============================================================================
void CGauge2D::Init(void) {
	CGauge::Init();
}

//=============================================================================
// 2Dゲージの終了処理
//=============================================================================
void CGauge2D::Uninit(void) {
	CGauge::Uninit();
}

//=============================================================================
// 2Dゲージの更新処理
//=============================================================================
void CGauge2D::Update(void) {
	CGauge::Update();
}

//=============================================================================
// 2Dゲージを生成
//=============================================================================
void CGauge2D::CreateGauge(CTexture::TEXTURE_TYPE typeTex, D3DXVECTOR3 pos, float fWidth, float fHeight) {
	//ゲージのダブルポインタを取得
	CObject** ppGauge = GetGaugePtr();

	//ゲージを生成するポインタ変数のアドレスがnullの場合終了
	if (ppGauge == nullptr) return;

	//すでに生成されている場合終了
	if (*ppGauge != nullptr) return;

	//ゲージの生成
	*ppGauge = CObject2D::Create(pos, typeTex, fWidth, fHeight);
}

//=============================================================================
// 2Dゲージの背景を生成
//=============================================================================
void CGauge2D::CreateGaugeBG(CTexture::TEXTURE_TYPE typeTex, D3DXVECTOR3 pos, float fWidth, float fHeight) {
	//ゲージの背景のダブルポインタを取得
	CObject** ppGaugeBG = GetGaugeBGPtr();

	//ゲージの背景を生成するポインタ変数のアドレスがnullの場合終了
	if (ppGaugeBG == nullptr) return;

	//すでに生成されている場合終了
	if (*ppGaugeBG != nullptr) return;

	//背景の生成
	*ppGaugeBG = CObject2D::Create(pos, typeTex, fWidth, fHeight);
}

//=============================================================================
// 2Dゲージの枠を生成
//=============================================================================
void CGauge2D::CreateGaugeFrame(CTexture::TEXTURE_TYPE typeTex, D3DXVECTOR3 pos, float fWidth, float fHeight) {
	//ゲージの背景のダブルポインタを取得
	CObject** ppGaugeFrame = GetGaugeFramePtr();

	//ゲージの背景を生成するポインタ変数のアドレスがnullの場合終了
	if (ppGaugeFrame == nullptr) return;

	//すでに生成されている場合終了
	if (*ppGaugeFrame != nullptr) return;

	//背景の生成
	*ppGaugeFrame = CObject2D::Create(pos, typeTex, fWidth, fHeight);

	//生成されていない場合終了
	if (*ppGaugeFrame == nullptr) return;
}